{"version":3,"sources":["Components/Mobilecar.js"],"names":["AutoPlaySwipeableViews","autoPlay","SwipeableViews","useStyles","makeStyles","theme","root","maxWidth","flexGrow","margin","header","display","alignItems","height","paddingLeft","spacing","backgroundColor","palette","background","default","img","overflow","width","SwipeableTextMobileStepper","props","id","images","data","projects","screenshots","tutorialSteps","label","imgPath","classes","useTheme","React","useState","activeStep","setActiveStep","maxSteps","length","className","square","elevation","axis","direction","index","onChangeIndex","step","enableMouseEvents","map","Math","abs","src","alt","steps","position","variant","nextButton","size","onClick","prevActiveStep","disabled","backButton"],"mappings":"iRAYMA,EAAyBC,mBAASC,KAElCC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,IACVC,SAAU,EACVC,OAAQ,QAEVC,OAAQ,CACNC,QAAS,OACTC,WAAY,SACZC,OAAQ,GACRC,YAAaT,EAAMU,QAAQ,GAC3BC,gBAAiBX,EAAMY,QAAQC,WAAWC,SAE5CC,IAAK,CACHP,OAAQ,IACRF,QAAS,QACTJ,SAAU,IACVc,SAAU,SACVC,MAAO,YA2GIC,UAvGf,SAAoCC,GAClC,IAAMC,EAAKD,EAAMC,GAEXC,EAASF,EAAMG,KAAKC,SAASH,GAAII,YAAYH,OAE7CI,EAAgB,CACpB,CACEC,MAAO,SACPC,QAASN,EAAO,IAElB,CACEK,MAAO,SACPC,QAASN,EAAO,IAElB,CACEK,MAAO,SACPC,QAASN,EAAO,IAElB,CACEK,MAAO,SACPC,QAASN,EAAO,KAGdO,EAAU9B,IACVE,EAAQ6B,cAxB2B,EAyBLC,IAAMC,SAAS,GAzBV,mBAyBlCC,EAzBkC,KAyBtBC,EAzBsB,KA0BnCC,EAAWT,EAAcU,OAc/B,OACE,cAAC,IAAD,UACE,sBAAKC,UAAWR,EAAQ3B,KAAxB,UACE,cAAC,IAAD,CAAOoC,QAAM,EAACC,UAAW,EAAGF,UAAWR,EAAQvB,OAA/C,SACE,cAAC,IAAD,UAAaoB,EAAcO,GAAYN,UAEzC,cAAC/B,EAAD,CACE4C,KAA0B,QAApBvC,EAAMwC,UAAsB,YAAc,IAChDC,MAAOT,EACPU,cAbiB,SAACC,GACxBV,EAAcU,IAaRC,mBAAiB,EAJnB,SAMGnB,EAAcoB,KAAI,SAACF,EAAMF,GAAP,OACjB,8BACGK,KAAKC,IAAIf,EAAaS,IAAU,EAC/B,qBACEL,UAAWR,EAAQb,IACnBiC,IAAKL,EAAKhB,QACVsB,IAAKN,EAAKjB,QAEV,MAPIiB,EAAKjB,YAWnB,cAAC,IAAD,CACEwB,MAAOhB,EACPiB,SAAS,SACTC,QAAQ,OACRpB,WAAYA,EACZqB,WACE,eAAC,IAAD,CACEC,KAAK,QACLC,QA5CO,WACjBtB,GAAc,SAACuB,GAAD,OAAoBA,EAAiB,MA4CzCC,SAAUzB,IAAeE,EAAW,EAHtC,iBAMuB,QAApBlC,EAAMwC,UACL,cAAC,IAAD,IAEA,cAAC,IAAD,OAINkB,WACE,eAAC,IAAD,CACEJ,KAAK,QACLC,QAtDO,WACjBtB,GAAc,SAACuB,GAAD,OAAoBA,EAAiB,MAsDzCC,SAAyB,IAAfzB,EAHZ,UAKuB,QAApBhC,EAAMwC,UACL,cAAC,IAAD,IAEA,cAAC,IAAD,IARJ","file":"static/js/16.1cf30e3a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { autoPlay } from \"react-swipeable-views-utils\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 820,\r\n    flexGrow: 1,\r\n    margin: \"auto\",\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    height: 50,\r\n    paddingLeft: theme.spacing(4),\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  img: {\r\n    height: 330,\r\n    display: \"block\",\r\n    maxWidth: 820,\r\n    overflow: \"hidden\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nfunction SwipeableTextMobileStepper(props) {\r\n  const id = props.id;\r\n  //const title = props.data.projects[id].name;\r\n  const images = props.data.projects[id].screenshots.images;\r\n\r\n  const tutorialSteps = [\r\n    {\r\n      label: \"image1\",\r\n      imgPath: images[0],\r\n    },\r\n    {\r\n      label: \"image2\",\r\n      imgPath: images[1],\r\n    },\r\n    {\r\n      label: \"image3\",\r\n      imgPath: images[2],\r\n    },\r\n    {\r\n      label: \"image4\",\r\n      imgPath: images[3],\r\n    },\r\n  ];\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const maxSteps = tutorialSteps.length;\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStepChange = (step) => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className={classes.root}>\r\n        <Paper square elevation={0} className={classes.header}>\r\n          <Typography>{tutorialSteps[activeStep].label}</Typography>\r\n        </Paper>\r\n        <AutoPlaySwipeableViews\r\n          axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n          index={activeStep}\r\n          onChangeIndex={handleStepChange}\r\n          enableMouseEvents\r\n        >\r\n          {tutorialSteps.map((step, index) => (\r\n            <div key={step.label}>\r\n              {Math.abs(activeStep - index) <= 2 ? (\r\n                <img\r\n                  className={classes.img}\r\n                  src={step.imgPath}\r\n                  alt={step.label}\r\n                />\r\n              ) : null}\r\n            </div>\r\n          ))}\r\n        </AutoPlaySwipeableViews>\r\n        <MobileStepper\r\n          steps={maxSteps}\r\n          position=\"static\"\r\n          variant=\"text\"\r\n          activeStep={activeStep}\r\n          nextButton={\r\n            <Button\r\n              size=\"small\"\r\n              onClick={handleNext}\r\n              disabled={activeStep === maxSteps - 1}\r\n            >\r\n              Next\r\n              {theme.direction === \"rtl\" ? (\r\n                <KeyboardArrowLeft />\r\n              ) : (\r\n                <KeyboardArrowRight />\r\n              )}\r\n            </Button>\r\n          }\r\n          backButton={\r\n            <Button\r\n              size=\"small\"\r\n              onClick={handleBack}\r\n              disabled={activeStep === 0}\r\n            >\r\n              {theme.direction === \"rtl\" ? (\r\n                <KeyboardArrowRight />\r\n              ) : (\r\n                <KeyboardArrowLeft />\r\n              )}\r\n              Back\r\n            </Button>\r\n          }\r\n        />\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SwipeableTextMobileStepper;\r\n"],"sourceRoot":""}